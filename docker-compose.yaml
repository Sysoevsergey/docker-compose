services:
  django_app:
    build: .
    container_name: django_app
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - static:/app/static
      - nginx_conf:/app/nginx
    entrypoint: /app/entrypoint.sh
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:8000/api/v1/" ]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=example@example.com
      - PGADMIN_DEFAULT_PASSWORD=password
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network
    ports:
      - "5432:5432"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - static:/app/static
      - nginx_conf:/etc/nginx/conf.d/
    depends_on:
      django_app:
        condition: service_healthy
    restart: always
    networks:
      - app_network

volumes:
  postgres_data:
  static:
  nginx_conf:

networks:
  app_network:
    driver: bridge